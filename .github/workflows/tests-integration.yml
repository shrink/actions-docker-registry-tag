name: Integration Test

on:
  push:
    branches:
      - main
  workflow_run:
    workflows:
      - Build Action
    types:
      - completed
  schedule:
    - cron: "*/37 12 * * *"

jobs:
  tag-example-image:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    env:
      registry: ghcr.io
      repository: "${{ github.repository }}-test"
      tag: "${{ github.run_id }}"
      image: "ghcr.io/${{ github.repository }}-test:${{ github.run_id }}"
      token: "${{ secrets.GHCR_PAT }}"
      username: "${{ github.repository_owner }}"
      password: "${{ secrets.GHCR_PAT }}"
    steps:
      - uses: actions/checkout@v2
      - name: Log In to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: "${{ env.registry }}"
          username: "${{ env.username }}"
          password: "${{ env.password }}"
      - name: Add example image to container registry for test repository
        run: |
          docker pull hello-world
          docker tag hello-world ${{ env.image }}
          docker push ${{ env.image }}
      - name: Add One Tag
        uses: ./
        with:
          registry: "${{ env.registry }}"
          token: "${{ env.token }}"
          repository: "${{ env.repository }}"
          target: "${{ env.tag }}"
          tags: "${{ env.tag }}-single"
      - name: Add Multiple Tags
        uses: ./
        with:
          registry: "${{ env.registry }}"
          token: "${{ env.token }}"
          repository: "${{ env.repository }}"
          target: "${{ env.tag }}"
          tags: |
            ${{ env.tag }}-multiple-a
            ${{ env.tag }}-multiple-b
  assert-tags-exist:
    runs-on: ubuntu-latest
    needs: [tag-example-image]
    strategy:
      matrix:
        tag: [single, multiple-a, multiple-b]
      fail-fast: false
    env:
      repository: "https://ghcr.io/v2/${{ github.repository }}-test"
      tag: "${{ github.run_id }}-${{ matrix.tag }}"
      token: "${{ secrets.GHCR_PAT }}"
    steps:
      - name: Assert image has tag ${{ matrix.tag }}
        run: |
          token=$(echo -n $token | base64)
          curl -sf $repository/manifests/$tag -H "Authorization: Bearer $token" \
          || (echo "::error::$tag not found" && exit 1)
